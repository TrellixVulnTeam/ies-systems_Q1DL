{"ast":null,"code":"import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n\n    this.onError = () => {\n      this.ionError.emit();\n    };\n  }\n\n  srcChanged() {\n    this.addIO();\n  }\n\n  componentDidLoad() {\n    this.addIO();\n  }\n\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n\n    if (typeof window !== 'undefined' && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        // because there will only ever be one instance\n        // of the element we are observing\n        // we can just use data[0]\n        if (data[0].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    } else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n\n  render() {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"img\", {\n      decoding: \"async\",\n      src: this.loadSrc,\n      alt: this.alt,\n      onLoad: this.onLoad,\n      onError: this.loadError,\n      part: \"image\"\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"src\": [\"srcChanged\"]\n    };\n  }\n\n};\nImg.style = imgCss;\nexport { Img as ion_img };","map":{"version":3,"sources":["C:/Users/ultron/Documents/ies-systems/node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","imgCss","Img","constructor","hostRef","ionImgWillLoad","ionImgDidLoad","ionError","onLoad","emit","onError","srcChanged","addIO","componentDidLoad","src","undefined","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","render","class","decoding","alt","part","watchers","style","ion_img"],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\r\n\r\nconst Img = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\r\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\r\n    this.ionError = createEvent(this, \"ionError\", 7);\r\n    this.onLoad = () => {\r\n      this.ionImgDidLoad.emit();\r\n    };\r\n    this.onError = () => {\r\n      this.ionError.emit();\r\n    };\r\n  }\r\n  srcChanged() {\r\n    this.addIO();\r\n  }\r\n  componentDidLoad() {\r\n    this.addIO();\r\n  }\r\n  addIO() {\r\n    if (this.src === undefined) {\r\n      return;\r\n    }\r\n    if (typeof window !== 'undefined' &&\r\n      'IntersectionObserver' in window &&\r\n      'IntersectionObserverEntry' in window &&\r\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\r\n      this.removeIO();\r\n      this.io = new IntersectionObserver(data => {\r\n        // because there will only ever be one instance\r\n        // of the element we are observing\r\n        // we can just use data[0]\r\n        if (data[0].isIntersecting) {\r\n          this.load();\r\n          this.removeIO();\r\n        }\r\n      });\r\n      this.io.observe(this.el);\r\n    }\r\n    else {\r\n      // fall back to setTimeout for Safari and IE\r\n      setTimeout(() => this.load(), 200);\r\n    }\r\n  }\r\n  load() {\r\n    this.loadError = this.onError;\r\n    this.loadSrc = this.src;\r\n    this.ionImgWillLoad.emit();\r\n  }\r\n  removeIO() {\r\n    if (this.io) {\r\n      this.io.disconnect();\r\n      this.io = undefined;\r\n    }\r\n  }\r\n  render() {\r\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"src\": [\"srcChanged\"]\r\n  }; }\r\n};\r\nImg.style = imgCss;\r\n\r\nexport { Img as ion_img };\r\n"]},"metadata":{},"sourceType":"module"}